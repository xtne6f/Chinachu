dofile(mg.script_name:gsub('[^\\/]*$','')..'akarin.lua')

post=ReadPost()
code=500
ctype='application/json'
ct='{}'
id=mg.request_info.uri:match('/(%d+)%.json$')
if id then
  if EffectiveMethod(post)=='DELETE' then
    edcb.DelRecFileInfo(0+id)
    code=200
  end
else
  id,cmd=mg.request_info.uri:match('/(%d+)/(file%.json)$')
  if not id then
    id,cmd=mg.request_info.uri:match('/(%d+)/(file%.m2ts)$')
    if not id then
      id,cmd=mg.request_info.uri:match('/(%d+)/(preview%.jpg)$')
    end
  end
  if id then
    code=404
    r=edcb.GetRecFileInfo(0+id)
    if r then
      code=410
      f=io.open(edcb.Convert('cp932','utf-8',r.recFilePath),'rb')
      if f then
        if cmd=='file.json' then
          code=200
          ct='{"size":'..f:seek("end")..'}'
        elseif cmd=='file.m2ts' then
          code=nil
          mg.write(Response(200,mg.get_mime_type(cmd))..'Content-Disposition: filename='..cmd..'\r\n\r\n')
          while true do
            buf=f:read(48128)
            if not buf or #buf==0 or not mg.write(buf) then
              break
            end
          end
        elseif cmd=='preview.jpg' then
          ct=''
          pos=math.max((tonumber(mg.get_var(mg.request_info.query_string,'pos')) or 5)-1.5,0)
          ff=io.popen('ffmpeg -f mpegts -ss '..pos..' -i "'..edcb.Convert('cp932','utf-8',r.recFilePath)
                      ..'" -frames:v 1 -c:v mjpeg -an -f image2 -s 480x270 -map 0:0 -','rb')
          if ff then
            ct=ff:read('*a')
            ff:close()
          end
          code=#ct~=0 and 200 or 404
          ctype='image/jpeg'
        end
        f:close()
      end
    end
  end
end

if code then
  mg.write(Response(code,ctype,ctype~='image/jpeg' and 'utf-8',#ct)..'\r\n',ct)
end
